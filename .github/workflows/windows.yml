name: windows_build

on:
  push:
    branches: 'main'

jobs:
  windows:
    runs-on: windows-2016
    steps:
      - uses: actions/checkout@v2

      - name: Download dependencies
        run: ./download_deps.sh
        shell: bash

      - name: ZIP dependencies
        run: |
          $compress_vscode_extensions = @{
            Path = "vscode_extensions"
            CompressionLevel = "Fastest"
            DestinationPath = "vscode_extensions.zip"
          }
          Compress-Archive @compress_vscode_extensions
          $compress_python_packages = @{
            Path = "python_packages"
            CompressionLevel = "Fastest"
            DestinationPath = "python_packages.zip"
          }
          Compress-Archive @compress_python_packages
        shell: powershell

      - name: Build the Rust installer
        run: ./build_installer.sh
        shell: bash

      - name: Create release tag
        shell: bash
        run: echo "TAG_NAME=$(date +v-%Y-%m-%d-%H%M)" >> $GITHUB_ENV

      #- name: Move/rename build artifacts
        #run: |
          #mv smauglys.exe Smauglys-${TAG_NAME}.exe
        #shell: bash

      - name: Create nightly release
        id: create_nightly_release
        uses: actions/create-release@v1
        env:
          # This token is provided by Actions, you do not need to create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Nightly Release ${{ env.TAG_NAME }}
          body: Naktinis smauglys.
          draft: false
          prerelease: true

      - name: Store nightly release upload URL
        shell: bash
        run: echo "UPLOAD_URL=${{ steps.create_nightly_release.outputs.upload_url }}" >> $GITHUB_ENV

      - name: Upload Smauglys installer
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: smauglys.exe
          asset_name: Smauglys-${{ env.TAG_NAME }}.exe
          asset_content_type: application/octet-stream

      - name: Install NSIS
        run: |
            Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
            scoop bucket add extras
            scoop install nsis
      - name: Print NSIS version
        run: makensis -VERSION
      - name: Print NSIS compile flags
        run: makensis -HDRINFO
      - name: Download plugins
        run: curl 'https://nsis.sourceforge.io/mediawiki/images/7/7f/EnVar_plugin.zip' -Lo EnVar_plugin.zip
        shell: bash
      - name: Extract NSIS Plugins
        run: Expand-Archive -LiteralPath 'EnVar_plugin.zip' -DestinationPath nsis_plugins
      - name: Create installer
        run: makensis install_script.nsi

      - name: Upload NSIS Smauglys installer
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: smauglys_installer.exe
          asset_name: smauglys_installer-${{ env.TAG_NAME }}.exe
          asset_content_type: application/octet-stream

      #- name: Release
        #uses: softprops/action-gh-release@v1
        #with:
          #tag_name: ${{ env.TAG_NAME }}
          #files: |
            #./Smauglys-*.exe
            #./wrapper*.exe
        #env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
